{
    "contents" : "---\ntitle: \"Chapter 1\"\noutput: html_document\n---\n\nhttps://campus.datacamp.com/courses/kaggle-r-tutorial-on-machine-learning/chapter-1-raising-anchor\n\n\n```{r}\ntrain_url <- \"http://s3.amazonaws.com/assets.datacamp.com/course/Kaggle/train.csv\"\nif (! file.exists(\"train.csv\")){\n  download.file(train_url, \"train.csv\")\n}\ntrain <- read.csv(\"train.csv\")\n  \n# Import the testing set: test\ntest_url <- \"http://s3.amazonaws.com/assets.datacamp.com/course/Kaggle/test.csv\"\nif (! file.exists(\"test.csv\")){\n  download.file(test_url, \"test.csv\")\n}\n\ntest <- read.csv(\"test.csv\")\n  \n# Print train and test to the console\ntrain\ntest\n```\n\n```{r}\n# Passengers that survived vs passengers that passed away\ntable(train$Survived) \n\n# As proportions\n# absolute numbers\ntable(train$Survived) \n\n# percentages\nprop.table(table(train$Survived))\n  \n# Males & females that survived vs males & females that passed away\ntable(train$Sex, train$Survived)\n\n# As row-wise proportions\nprop.table(table(train$Sex, train$Survived), margin=1)\n\n\n```\n\n```{r}\ntrain$Child[train$Age >= 18] <- 0\ntrain$Child[is.na(train$Age)] <- NA\ntrain$Child[train$Age < 18] <- 1\nprop.table(table(train$Child, train$Survived), margin=1)\n\n```\n\n\n### This one gets .7655\n```{r}\ntest_one = test\ntest_one$Survived = 0\ntest_one$Survived[test_one$Sex == \"female\"] <- 1\nhead(test_one)\n\n```\n\n### logistic\n```{r}\n\ntitanic_log = glm(family=binomial, data=train, formula=Survived ~ Pclass + Sex + Age )\nsummary(titanic_log)\ntest_two = test\ntest_two$Survived = 0\ntest_two.pred = predict(titanic_log, test_two, type=\"response\")\ntest_two$Survived = ifelse(test_two.pred > 0.5, 1, 0)\ntest_two$Survived = ifelse(is.na(test_two$Survived), 0 ,test_two$Survived)\nhead(test_two)\ntest_two_out = data.frame(PassengerId=test_two$PassengerId, Survived=test_two$Survived)\nwrite.csv(test_two_out, \"my_solution_test_two.csv\", row.names=FALSE)\n\n# 177 get dropped\ntest[rowSums(is.na(test)) > 0,]\n```\n\n\n# All the NA's are age.\n\nThink we can predict the age using a multinomial logistic regression on some of the other fields, so, maybe a class mean imputation.\nhttp://www.ats.ucla.edu/stat/r/dae/mlogit.htm\n\n```{r}\n\n## This one gets  0.77033, so small improvement!\nage_lm = lm(data=train, formula=Age~Pclass + Sex + SibSp + Parch + Fare + Embarked)\nlibrary(leaps)\nleaps<-regsubsets(Age~Pclass + Sex + SibSp + Parch + Fare + Embarked,data=train,nbest=5)\n# view results \nplot(leaps, scale=\"bic\")\nsummary(age_lm)\n# looks like Pclass, Sex and SibSp are good predictors\nage_lm2 = lm(data=train, formula=Age~Pclass + Sex + SibSp)\n\npredict(age_lm2,train[rowSums(is.na(train)) > 0,])\nnew_train = train\nnew_train$Age[rowSums(is.na(train)) > 0] = predict(age_lm2,train[rowSums(is.na(train)) > 0,])\n\ntitanic_log2 = glm(family=binomial, data=new_train, formula=Survived ~ Pclass + Sex + Age + SibSp)\n\nsummary(titanic_log2)\ntest_three= test\ntest_three$Survived = 0\ntest_three.pred = predict(titanic_log2, test_three, type=\"response\")\ntest_three$Survived = ifelse(test_three.pred > 0.5, 1, 0)\ntest_three$Survived = ifelse(is.na(test_three$Survived), 0 ,test_three$Survived)\nhead(test_three)\ntest_three_out = data.frame(PassengerId=test_three$PassengerId, Survived=test_three$Survived)\nwrite.csv(test_three_out, \"my_solution_test_three.csv\", row.names=FALSE)\n\n```\n\nShould do another try, but set survived percentage at .33, since 2/3 of people actually died.\n```{r}\ntest_four = train\ntest_four.pred = predict(titanic_log2, test_four, type=\"response\")\ntest_four$Survived = ifelse(test_four.pred > 0.66, 1, 0)\ntest_four$Survived = ifelse(is.na(test_four$Survived), 0 ,test_four$Survived)\nhead(test_four)\ntest_four_out = data.frame(PassengerId=test_four$PassengerId, Survived=test_four$Survived)\nwrite.csv(test_four_out, \"my_solution_test_four.csv\", row.names=FALSE)\n```\n\n# other ideas\n# check diagnostics\n\n",
    "created" : 1458795146607.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3015115141",
    "id" : "266FEF54",
    "lastKnownWriteTime" : 1459226572,
    "path" : "D:/src/kaggle_titanic/chapter 1.Rmd",
    "project_path" : "chapter 1.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}